function filamentGoogleMaps({setStateUsing,autocomplete,autocompleteReverse,geolocate,geolocateLabel,draggable,clickable,defaultLocation,statePath,controls,layers,reverseGeocodeFields,defaultZoom,debug,gmaps}){return{map:null,geocoder:null,marker:null,markerLocation:null,layers:null,mapEl:null,pacEl:null,config:{debug:!1,autocomplete:"",autocompleteReverse:!1,geolocate:!0,geolocateLabel:"Set Current Location",draggable:!0,clickable:!1,defaultLocation:{lat:0,lng:0},statePath:"",controls:{mapTypeControl:!0,scaleControl:!0,streetViewControl:!0,rotateControl:!0,fullscreenControl:!0,searchBoxControl:!1,zoomControl:!1},layers:[],reverseGeocodeFields:{},defaultZoom:8,gmaps:""},symbols:{"%n":["street_number"],"%z":["postal_code"],"%S":["street_address","route"],"%A1":["administrative_area_level_1"],"%A2":["administrative_area_level_2"],"%A3":["administrative_area_level_3"],"%A4":["administrative_area_level_4"],"%A5":["administrative_area_level_5"],"%a1":["administrative_area_level_1"],"%a2":["administrative_area_level_2"],"%a3":["administrative_area_level_3"],"%a4":["administrative_area_level_4"],"%a5":["administrative_area_level_5"],"%L":["locality"],"%D":["sublocality"],"%C":["country"],"%c":["country"]},loadGMaps:function(){if(document.getElementById("filament-google-maps-google-maps-js")){let waitForGlobal=function(key,callback){window[key]?callback():setTimeout(function(){waitForGlobal(key,callback)},100)};waitForGlobal("filamentGoogleMapsAPILoaded",function(){this.createMap()}.bind(this))}else{let script=document.createElement("script");script.id="filament-google-maps-google-maps-js",window.filamentGoogleMapsAsyncLoad=this.createMap.bind(this),script.src=gmaps+"&callback=filamentGoogleMapsAsyncLoad",document.head.appendChild(script)}},init:function(mapEl,pacEl){this.mapEl=mapEl,this.pacEl=pacEl,this.config={...this.config,...config},this.loadGMaps()},createMap:function(){if(window.filamentGoogleMapsAPILoaded=!0,(autocompleteReverse||Object.keys(reverseGeocodeFields).length>0)&&(this.geocoder=new google.maps.Geocoder),this.map=new google.maps.Map(this.mapEl,{center:this.getCoordinates(),zoom:defaultZoom,...controls}),this.marker=new google.maps.Marker({draggable,map:this.map}),this.marker.setPosition(this.getCoordinates()),clickable&&this.map.addListener("click",event=>{this.markerLocation=event.latLng.toJSON(),this.setCoordinates(this.markerLocation),this.updateAutocomplete(this.markerLocation),this.updateGeocode(this.markerLocation),this.map.panTo(this.markerLocation)}),draggable&&google.maps.event.addListener(this.marker,"dragend",event=>{this.markerLocation=event.latLng.toJSON(),this.setCoordinates(this.markerLocation),this.updateAutocomplete(this.markerLocation),this.updateGeocode(this.markerLocation),this.map.panTo(this.markerLocation)}),controls.searchBoxControl){let input=this.pacEl,searchBox=new google.maps.places.SearchBox(input);this.map.controls[google.maps.ControlPosition.TOP_LEFT].push(input),searchBox.addListener("places_changed",()=>{input.value="",this.markerLocation=searchBox.getPlaces()[0].geometry.location})}let geocompleteOptions={fields:["formatted_address","geometry","name"],strictBounds:!1,types:["geocode"]};if(autocomplete){let geoComplete=document.getElementById(autocomplete);if(geoComplete){window.addEventListener("keydown",function(e){if((e.key==="U+000A"||e.key==="Enter"||e.code==="Enter")&&e.target.nodeName==="INPUT"&&e.target.type==="text")return e.preventDefault(),!1},!0);let autocomplete2=new google.maps.places.Autocomplete(geoComplete,geocompleteOptions);autocomplete2.addListener("place_changed",()=>{let place=autocomplete2.getPlace();if(!place.geometry||!place.geometry.location){window.alert("No details available for input: '"+place.name+"'");return}place.geometry.viewport?this.map.fitBounds(place.geometry.viewport):this.map.setCenter(place.geometry.location),this.marker.setPosition(place.geometry.location),this.markerLocation=place.geometry.location,this.setCoordinates(place.geometry.location)})}}if(layers&&(this.layers=layers.map(layerUrl=>new google.maps.KmlLayer({url:layerUrl,map:this.map}))),geolocate&&"geolocation"in navigator){let locationButton=document.createElement("button");locationButton.textContent=geolocateLabel,locationButton.classList.add("custom-map-control-button"),this.map.controls[google.maps.ControlPosition.TOP_CENTER].push(locationButton),locationButton.addEventListener("click",()=>{navigator.geolocation.getCurrentPosition(position=>{this.markerLocation={lat:position.coords.latitude,lng:position.coords.longitude},this.setCoordinates(this.markerLocation),this.updateAutocomplete(this.markerLocation),this.updateGeocode(this.markerLocation),this.map.panTo(this.markerLocation)})})}},updateMapFromAlpine:function(){let location=this.getCoordinates(),markerLocation=this.marker.getPosition();location.lat===markerLocation.lat()&&location.lng===markerLocation.lng()||(this.updateAutocomplete(location),this.updateMap(location))},updateMap:function(position){this.marker.setPosition(position),this.map.panTo(position)},updateGeocode:function(position){Object.keys(reverseGeocodeFields).length>0&&this.geocoder.geocode({location:position}).then(response=>{if(response.results[0]){let replacements=this.getReplacements(response.results[0].address_components);for(let field in reverseGeocodeFields){let replaced=reverseGeocodeFields[field];for(let replacement in replacements)replaced=replaced.split(replacement).join(replacements[replacement]);for(let symbol in this.symbols)replaced=replaced.split(symbol).join("");replaced=replaced.trim(),setStateUsing(field,replaced)}}}).catch(error=>{console.log(error.message)})},updateAutocomplete:function(position){autocomplete&&autocompleteReverse&&this.geocoder.geocode({location:position}).then(response=>{response.results[0]&&setStateUsing(autocomplete,response.results[0].formatted_address)}).catch(error=>{console.log(error.message)})},setCoordinates:function(position){setStateUsing(statePath,position)},getCoordinates:function(){let location=$wire.get(statePath);return(location===null||!location.hasOwnProperty("lat"))&&(location={lat:defaultLocation.lat,lng:defaultLocation.lng}),location},getReplacements:function(address_components){let replacements={};return address_components.forEach(component=>{for(let symbol in this.symbols)this.symbols[symbol].indexOf(component.types[0])!==-1&&(symbol===symbol.toLowerCase()?replacements[symbol]=component.short_name:replacements[symbol]=component.long_name)}),debug&&console.log(replacements),replacements}}}export{filamentGoogleMaps as default};
